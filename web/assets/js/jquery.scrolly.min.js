/* jquery.scrolly v1.0.0-dev | (c) @ajlkn | MIT licensed */
class Scrolly {
    constructor(element, options) {
      this.element = element;
      this.options = {
        anchor: 'top',
        easing: 'swing',
        offset: 0,
        parent: $('body,html'),
        pollOnce: false,
        speed: 1000,
        ...options,
      };
  
      this.init();
    }
  
    init = () => {
      const { element, options } = this;
      const { anchor, offset, parent } = options;
  
      element.on('click.scrolly', (e) => {
        e.preventDefault();
        const targetOffset = this.getTargetOffset();
        parent.stop().animate({ scrollTop: targetOffset }, options.speed, options.easing);
      });
    }
  
    getTargetOffset = () => {
      const { element, options } = this;
      const { anchor, offset } = options;
      const target = $(element).attr('href');
  
      if (target.charAt(0) !== '#' || target.length < 2) {
        return 0;
      }
  
      const targetElement = $(target);
      const targetHeight = targetElement.outerHeight();
      const windowHeight = $(window).height();
      let targetOffset = 0;
  
      switch (anchor) {
        case 'middle':
          targetOffset = targetElement.offset().top - (windowHeight - targetHeight) / 2;
          break;
        default:
        case 'top':
          targetOffset = targetElement.offset().top;
          break;
      }
  
      if (typeof offset === 'function') {
        targetOffset -= offset();
      } else {
        targetOffset -= offset;
      }
  
      return Math.max(targetOffset, 0);
    }
  }
  
  $.fn.scrolly = (options) => {
    return this.each(() => {
      new Scrolly($(this), options);
    });
  };
  